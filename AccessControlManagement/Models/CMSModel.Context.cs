//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccessControlManagement.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CMSEntities : DbContext
    {
        public CMSEntities()
            : base("name=CMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Advertisement> Advertisements { get; set; }
        public virtual DbSet<AdvertisementDetail> AdvertisementDetails { get; set; }
        public virtual DbSet<Article> Articles { get; set; }
        public virtual DbSet<ArticleHasAd> ArticleHasAds { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Post> Posts { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
    
        public virtual int usp_Category_delete(string catname)
        {
            var catnameParameter = catname != null ?
                new ObjectParameter("catname", catname) :
                new ObjectParameter("catname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Category_delete", catnameParameter);
        }
    
        public virtual int usp_Category_insert(Nullable<int> categoryID, string catname)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            var catnameParameter = catname != null ?
                new ObjectParameter("catname", catname) :
                new ObjectParameter("catname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Category_insert", categoryIDParameter, catnameParameter);
        }
    
        public virtual int usp_Category_update(string oldcatname, string newCatName)
        {
            var oldcatnameParameter = oldcatname != null ?
                new ObjectParameter("oldcatname", oldcatname) :
                new ObjectParameter("oldcatname", typeof(string));
    
            var newCatNameParameter = newCatName != null ?
                new ObjectParameter("newCatName", newCatName) :
                new ObjectParameter("newCatName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Category_update", oldcatnameParameter, newCatNameParameter);
        }
    
        public virtual int usp_request_Expiry_date(Nullable<int> adID)
        {
            var adIDParameter = adID.HasValue ?
                new ObjectParameter("adID", adID) :
                new ObjectParameter("adID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_request_Expiry_date", adIDParameter);
        }
    }
}

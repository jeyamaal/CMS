
@model IEnumerable<object>
@{

    List<AccessControlManagement.Models.user> userss = Model.ToList()[0] as List<AccessControlManagement.Models.user>;
    List<AccessControlManagement.Models.AdvertisemetsAccess> advt = Model.ToList()[1] as List<AccessControlManagement.Models.AdvertisemetsAccess>;


}


@{
    Layout = "~/Views/Shared/_Advertisement_Layout.cshtml";
}


@*@section Scripts {
    @Scripts.Render("~/Views/Shared/_Advertisement_Layout.cshtml")
}*@
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>AdvertisementDetail</h4>
        <hr />

@foreach (var item in advt)
{

        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(modelItem => item.ADD_id)

        <div class="form-group">
            @Html.LabelFor(modelItem => item.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(modelItem => item.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => item.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(modelItem => item.category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(modelItem => item.category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => item.category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.wantToPostDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.wantToPostDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.wantToPostDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.postedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.postedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.postedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.updatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.updatedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.updatedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.category_id, "category_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("category_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.adImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.adImage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.adImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>*@

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(modelItem => item.ADD_id)
    <table>
        <tr>
            <td>
                Title
            </td>
            <td></td>
            <td>
                @Html.EditorFor(modelItem => item.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => item.title, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr></tr>
        <tr></tr>
        <tr>
            <td>
                Category
            </td>
            <td></td>
            <td>
                @Html.DropDownList("category_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(modelItem => item.Category1.category_id, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr></tr>
        <tr></tr>


        <tr>
            <td>
                Wanted to Post
            </td>
            <td></td>
            <td>
                @Html.EditorFor(modelItem => item.wantToPostDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => item.wantToPostDate, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr></tr>
        <tr></tr>

        <tr>
            <td>
                Content
            </td>
            <td></td>
            <td>

                @Html.TextAreaFor(modelItem => item.description)
            </td>
        </tr>
        <tr></tr>
        <tr></tr>
        <tr>
            <td>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </td>
        </tr>

    </table>
}
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    

}

